<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>hosh</groupId>
	<artifactId>hosh-parent</artifactId>
	<packaging>pom</packaging>
	<version>0.1.5-SNAPSHOT</version>
	<url>https://hosh-shell.github.io</url>
	<name>hosh</name>
	<description>The Human Oriented SHell</description>
	<inceptionYear>2018</inceptionYear>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>dfa1</id>
			<name>Davide Angelocola</name>
			<email>davide.angelocola+hosh@gmail.com</email>
			<url>https://dfa1.github.io</url>
			<timezone>Europe/Zurich</timezone>
		</developer>
	</developers>
	<scm>
		<url>https://github.com/hosh-shell/hosh</url>
		<developerConnection>scm:git:.</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<argLine/> <!-- defined for when not running with jacoco -->
		<!-- versions production classpath -->
		<version.antlr>4.9.3</version.antlr>
		<version.commonscli>1.5.0</version.commonscli>
		<version.jline>3.21.0</version.jline>
		<!-- versions test classpath -->
		<version.junit>5.8.2</version.junit>
		<version.assertj>3.22.0</version.assertj>
		<version.mockito>4.2.0</version.mockito>
		<version.equalsverifier>3.8.3</version.equalsverifier>
		<version.archunit>0.22.0</version.archunit>
		<version.quicktheories>0.26</version.quicktheories>
		<version.slf4j>1.7.36</version.slf4j>
	</properties>
	<modules>
		<module>test-support</module>
		<module>spi-test-support</module>
		<module>spi</module>
		<module>runtime</module>
		<module>modules/system</module>
		<module>modules/text</module>
		<module>modules/history</module>
		<module>modules/network</module>
		<module>modules/terminal</module>
		<module>modules/filesystem</module>
		<module>main</module>
	</modules>
	<dependencyManagement>
		<dependencies>
			<!-- production classpath -->
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>${version.commonscli}</version>
			</dependency>
			<dependency>
				<groupId>org.jline</groupId>
				<artifactId>jline-terminal</artifactId>
				<version>${version.jline}</version>
			</dependency>
			<dependency>
				<groupId>org.jline</groupId>
				<artifactId>jline-terminal-jna</artifactId>
				<version>${version.jline}</version>
			</dependency>
			<dependency>
				<groupId>org.jline</groupId>
				<artifactId>jline-reader</artifactId>
				<version>${version.jline}</version>
			</dependency>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-runtime</artifactId>
				<version>${version.antlr}</version>
			</dependency>
			<!-- test classpath -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${version.junit}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${version.junit}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${version.mockito}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${version.mockito}</version>
			</dependency>
			<dependency>
				<groupId>nl.jqno.equalsverifier</groupId>
				<artifactId>equalsverifier</artifactId>
				<version>${version.equalsverifier}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${version.assertj}</version>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit</artifactId>
				<version>${version.archunit}</version>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit-junit5-api</artifactId>
				<version>${version.archunit}</version>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit-junit5-engine</artifactId>
				<version>${version.archunit}</version>
			</dependency>
			<dependency>
				<groupId>org.quicktheories</groupId>
				<artifactId>quicktheories</artifactId>
				<version>${version.quicktheories}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.9.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<useIncrementalCompilation>false</useIncrementalCompilation>
					<staleMillis>1</staleMillis>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Xlint:-requires-automatic</arg>
						<arg>-Xpkginfo:always</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<trimStackTrace>false</trimStackTrace>
					<argLine>@{argLine} --add-exports java.base/jdk.internal.misc=hosh.runtime</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.7.3</version>
				<configuration>
					<targetClasses>
						<param>hosh.*</param>
					</targetClasses>
					<targetTests>
						<param>hosh.*</param>
					</targetTests>
					<excludedClasses>
						<param>hosh.runtime.antlr4.*</param>
					</excludedClasses>
					<excludedTestClasses>
						<param>hosh.integration.*</param>
						<param>hosh.runtime.PipelineCommandTest</param>
						<param>hosh.runtime.PipelineChannelTest</param>
					</excludedTestClasses>
					<threads>2</threads>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.15</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
							<failsOnError>true</failsOnError>
							<consoleOutput>true</consoleOutput>
							<sourceDirectories>
								<sourceDirectory>src/main/java</sourceDirectory>
							</sourceDirectories>
							<excludes>**/module-info.java</excludes>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>9.2.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>4.1</version>
				<inherited>false</inherited>
				<configuration>
					<header>${project.basedir}/LICENSE.md</header>
					<aggregate>true</aggregate>
					<failIfMissing>true</failIfMissing>
					<encoding>${project.build.sourceEncoding}</encoding>
					<includes>
						<include>**/main/java/**/*.java</include>
						<include>**/test/java/**/*.java</include>
					</includes>
					<strictCheck>true</strictCheck>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<goals>clean verify</goals>
					<localCheckout>true</localCheckout>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>gpg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<properties>
				<!--suppress UnresolvedMavenProperty -->
				<sonar.coverage.jacoco.xmlReportPaths>
					${project.build.directory}/site/jacoco/jacoco.xml,
					${project.build.directory}/site/jacoco-it/jacoco.xml,
					${maven.multiModuleProjectDirectory}/main/target/site/jacoco-aggregate/jacoco.xml
				</sonar.coverage.jacoco.xmlReportPaths>
				<sonar.exclusions>
					runtime/target/generated-sources/**,test-support/src/**,spi-test-support/src/**
				</sonar.exclusions>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.9.1.2184</version>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<id>agent-for-unit-tests</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
								</configuration>
							</execution>
							<execution>
								<id>agent-for-integration-tests</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.itReportPath}</destFile>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
									<goal>report-integration</goal>
									<goal>report-aggregate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
